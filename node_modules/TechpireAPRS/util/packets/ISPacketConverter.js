var AbstractPacketConverter = require('./AbstractPacketConverter.js')
, AbstractAPRSMessage = require('../../packets/AbstractAPRSMessage.js')
, APRSMessage = require('../../packets/APRSMessage.js')
, APRSPositionReport = require('../../packets/APRSPositionReport.js')
, ObjectReport = require('../../packets/ObjectReport.js')
;

var instance = null;

function ISPacketConverter() {
	AbstractPacketConverter.apply(this, arguments);
    
    instance = this;
}

ISPacketConverter.prototype = new AbstractPacketConverter();
ISPacketConverter.prototype.constructor = ISPacketConverter;

ISPacketConverter.prototype.ToOutputFormat = ToOutputFormat;

// Setting packet variables can have unintended consequences if you're reusing a packet.
// Let's avoid it for everybody's sanity incase they figure out some brilliant reason to
// reuse a packet other than testing.
function ToOutputFormat(packet) {
    var retVal = '';
    
    // assemble the header
    retVal += packet.callsign;
    retVal += '>'
    retVal += packet.destination
    retVal += ',:'
    retVal += packet.messageType
    
    if(packet instanceof APRSPositionReport) {
        retVal += instance.FormatPositionReport(packet);
    } else if(packet instanceof APRSMessage && packet.addressee != 'BLN' && packet.addressee.indexOf('NWS-') < 0) {
        retVal += instance.FormatMessage(packet);
        
        console.log('Message formatter test');
        console.log(new Buffer(retVal));
    }
    
    return retVal;
};

module.exports = ISPacketConverter;