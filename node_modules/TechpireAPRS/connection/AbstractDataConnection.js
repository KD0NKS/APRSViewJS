var util = require('util')
	, net = require('net')
	, events = require('events')
	, stream = require('stream')
	//, APRSPacketParser = require('APRSPacketParser.js')
	//, AbstractAPRSMessage = require('AbstractAPRSMessage.js')
	//, APRSPositionReport = require('APRSPositionReport.js')
	//, APRSMessage = require('APRSMessage.js')
	;

function AbstractDataConnection(data) {
	events.EventEmitter.call(this);
	
	//this.emit('error', data);
	
	this.socket = new net.Socket();
	
	this.io = data.io; // socket connection to UI
	
	this.host = data.host;
	this.port = data.port;
	
	this.isEnabled = false;
	this.isReconnectOnFailure = false;
}

util.inherits(AbstractDataConnection, events.EventEmitter);

AbstractDataConnection.prototype.connect = function() {
	try {
		
	
		throw new Error(this.socket == undefined || this.socket == null);
	
		// connection to the APRS HOST
		this.socket.connect(this.port, this.host, function() { });
	} catch(ex) {
		throw(ex);
		//window.console.log(ex);
	}
};

AbstractDataConnection.prototype.read = function() {
	// Abstracted method
};

module.exports = AbstractDataConnection;
