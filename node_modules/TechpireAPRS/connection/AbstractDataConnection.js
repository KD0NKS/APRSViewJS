var util = require('util')
	, net = require('net')
	, EventEmitter = require('events').EventEmitter
    , AbstractAPRSMessage = require('../packets/AbstractAPRSMessage.js')
	;

function AbstractDataConnection(args) {
	// TODO: Set defaults
	if(!args) {
		return;
	}
	
	this.host = args['host'];
	this.port = args['port'];
	
	this.softwareName = args['softwareName'];
	this.softwareVersion = args['softwareVersion'];
	
	this.isEnabled = args['isEnabled'];
	this.isReconnectOnFailure = args['isReconnectOnFailure'];
	
	this.socket = new net.Socket();
	
	this.socket.on("error", function(err) {
		console.log("Error");
		console.log(err);
	});
}

util.inherits(AbstractDataConnection, EventEmitter);

AbstractDataConnection.prototype.Connect = function() {
	if(this.isEnabled && this.isEnabled === true) {
		try {
			// connection to the APRS HOST
			this.socket.connect(this.port, this.host, function() { });
		} catch(ex) {
			throw(ex);
		}
	}
};

AbstractDataConnection.prototype.Read = function() {
	// Abstracted method
};

/*
AbstractDataConnection.prototype.Send = SendMessage;
    
function SendMessage(AbstractAPRSMessage message) {
    // TODO: Implement the ability to send a message
};
*/

module.exports = AbstractDataConnection;
